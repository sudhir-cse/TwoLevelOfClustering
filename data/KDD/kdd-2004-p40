Fast Nonlinear Regression via Eigenimages
Applied to Galactic Morphology


Brigham Anderson
Robotics Dept.
Carnegie Mellon University
Pittsburgh, PA 15213

brigham@cmu.edu
Andrew Moore
Robotics Dept.
Carnegie Mellon University
Pittsburgh, PA 15213

awm@cs.cmu.edu

Andrew Connolly
Astrophysics Dept.
University of Pittsburgh
Pittsburgh, PA 15213
ajc@phyast.pitt.edu
Robert Nichol
Inst. of Cosmology and Gravitation
University of Portsmouth
Portsmouth, UK
bob.nichol@port.ac.uk


ABSTRACT
Astronomy increasingly faces the issue of massive, unwieldly data
sets. The Sloan Digital Sky Survey (SDSS) [11] has so far gener-
ated tens of millions of images of distant galaxies, of which only
a tiny fraction have been morphologically classified. Morphologi-
cal classification in this context is achieved by fitting a parametric
model of galaxy shape to a galaxy image. This is a nonlinear re-
gression problem, whose challenges are threefold, 1) blurring of
the image caused by atmosphere and mirror imperfections, 2) large
numbers of local minima, and 3) massive data sets.
Our strategy is to use the eigenimages of the parametric model to
form a new feature space, and then to map both target image and the
model parameters into this feature space. In this low-dimensional
space we search for the best image-to-parameter match. To search
the space, we sample it by creating a database of many random
parameter vectors (prototypes) and mapping them into the feature
space. The search problem then becomes one of finding the best
prototype match, so the fitting process a nearest-neighbor search.
In addition to the savings realized by decomposing the original
space into an eigenspace, we can use the fact that the model is a
linear sum of functions to reduce the prototypes further: the only
prototypes stored are the components of the model function. A
modified form of nearest neighbor is used to search among them.
Additional complications arise in the form of missing data and
heteroscedasticity, both of which are addressed with weighted lin-
ear regression. Compared to existing techniques, speed-ups ach-
ieved are between 2 and 3 orders of magnitude. This should enable
the analysis of the entire SDSS dataset.




Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee.
KDD'04, August 22­25, 2004, Seattle, Washington, USA.
Copyright 2004 ACM 1-58113-888-1/04/0008 ...$5.00.
Categories and Subject Descriptors
I.5 [Computing Methodologies Pattern Recognition]: Implemen-
tation


General Terms
Algorithms


Keywords
Astronomy,Morphology,Nearest Neighbor,Regression,Pincipal Com-
ponent Analysis


1. INTRODUCTION
In order to understand the formation of large scale structures in
the universe, it is necessary to understand the varied galaxy mor-
phologies. This is still an open area of research in astronomy; it
is not precisely known how galaxy shapes arise. The distribution
of shapes and their correlation with other measured properties of
galaxies is important to generating and testing hypotheses about
the nature of the universe. This requires extracting various types
of information from large numbers of faint and noisy images of
galaxies, e.,g., whether the galaxy is spherical, elliptical, or disk-
shaped, the size of the central bulge relative to the size of the disk,
etc. Example images are given in Figure 1.
Figure 2 illustrates a common classification system still in use to-
day: the Hubble "tuning fork" [3], which roughly divides all galax-
ies into ellipticals (bulge-dominated) and spirals (disk-dominated).
The model parameter that corresponds to this is the bulge-to-disk
ratio, which describes the relative amounts of light emanating from
the two components. Hence a coarse galaxy classification of can
be made directly from a single structural parameter, which can be
obtained by fitting a mathematical model to a galaxy image. In this
case, the model is an additive combination of a disk image, a bulge
image, and a background (sky) image. The form of this model will
be given in Section 2.1.
There are significant obstacles, however, to fitting these models.
The most challenging is the Point Spread Function (PSF). Images
of galaxies from ground-based telescopes are smeared by a turbu-
lent atmosphere, and distorted by lens imperfections (telescope, fil-



40
Research Track Paper

Figure 1: Galaxy images taken from the Sloan Digital Sky Survey


ters, mirrors, lenses, etc.) Figure 4 illustrates the effect of the PSF
on a disk image. To understand the mechanism of the PSF, imagine
a single ray of light coming from the direction of the galaxy and
aimed at the center pixel/detector of the telescope. Without dis-
tortion, the resulting image would be a single point. However, as
the ray travels through the atmosphere and the telescope's optics, it
spreads out and is distorted before it hits the center pixel/detector.
The resulting image is a PSF.1 The PSF can be viewed as the prob-
ability mass function for the arrival of a single photon at a given
pixel, given that the photon was initially aimed at the center pixel.
The problem is that every incoming photon is subjected to the in-
fluences summarized in the PSF, so the resulting image is smeared.
Section 2.1.2 describes the action of the PSF.
Large numbers of local minima are another problem. The noise
of the images and a sometimes too-flexible model make finding the
correct fit difficult. For example, some disks can be well approxi-
mated by a combination of bulge and sky. In the presence of noise,
the two possibilities can be impossible to distinguish. In order to
enumerate these local minima, some form of global search is gener-
ally necessary, and this is quite time-consuming. The most trusted
of the current 2-d morphology techniques is a simulated annealing
algorithm [9], which is robust to local minima, but is slower due to
its caution. The algorithm described in this paper is able to sam-
ple the parameter space with on order of 50,000 samples, and is
therefore probably more robust to local minima.
Currently standard nonlinear regression techniques are used to
fit these images, such as simulated annealing [9] and Levenberg-
Marquardt [7]. These approaches are all effective, but time con-
suming, e.g., roughly 1-3 minutes per 64×64 image on a 1.4 GHz
pentium desktop. Assuming this, 100 million galaxies would re-

1
The Point Spread Function is more generally a smooth two-
dimensional function. We discretize it into a finite-resolution im-
age.
Figure 2: Hubble tuning fork diagram. The fundamental divi-
sion of galaxies is into ellipticals (E) and spirals (S). The num-
ber after the ellipticals is the ratio of their major axis to their
minor axis, called the ellipticity. The total light from the cen-
tral bulge relative to that from the disk (the bulge-to-disk ratio)
diminishes from left to right.




41
Research Track Paper

x





R
NN x




Figure 3: The generative model. Parameters from the space × are mapped into image space, RN
×N
by . The error model 
describes the variance in each of the N2 pixels/dimensions of the resulting image.


quire about 200 years of CPU time. For higher resolution images,
performance rapidly degrades. The code introduced in this paper
performs the same fits in less than a second, and is robust to changes
in resolution of the target image.
Other machine learning approaches to similar problems have in-
cluded the use of EM in classifying certain "bent-double" galax-
ies [5], the application of the Information Bottleneck method to
classification of galaxy spectra [10], and the use of artificial neu-
ral networks in classifying galaxies along a single "galaxy-type"
dimension [1].


2. PROBLEM
The general task is to fit a parametric model to data. In this
case the data is an image of a galaxy. In the galactic morphology
(GM) task, the model is a function whose 12 free parameters are the
morphological characteristics of the galaxy, e.g., shape, size, and
location (see Appendix for complete list.) This task is described
in detail in [9]. We assume all images are square with N pixels
per side, giving a total of N2 pixels. Occasionally images must be
represented as vectors, so they are denoted with an overhead arrow
(·). Images can be turned into vectors by vertically concatenating
the columns.

2.1 Generative Model
The most basic assumption that we make is that the target image
can be modeled. Here we use a model consisting of a set of four
main elements: {,,,}, which describes the expected number
of photons to arrive at a particular pixel ij in a matrix of pixels. The
ultimate objective is to invert this model for each target image.

·  is a function that maps parameters onto matrices as in Fig-
ure 3. The matrix's elements correspond to the pixels in an
image and/or to the detectors in a telescope.  is the sum of
c component functions:

(,) =
c

k=1
k(k,)
(1)


In the galactic morphology task,  has three components: a
disk, a bulge, and constant background. This function is de-
scribed in greater detail in Section 2.1.1 and in the Appendix.

·  is the space of possible values for the  parameter of . In
the galactic morphology task, these parameters are disk flux,
disk angle, disk inclination, bulge flux, etc. (see Appendix.)
These are the parameters sought by the regression.

·  is the space of possible values for the fixed  parameter of
. Unlike , these parameters are not fitted. In the galactic
morphology problem,  is the PSF. The space  contains all
the PSFs that could occur.

·  is a noise model. For the GM task, we assume additive,
zero-mean Gaussian noise.2 The noise can also be hetero-
scedastic, i.e., variance can differ between pixels. For clarity,
the  component may sometimes be omitted in the text.

The elements of the model described in this section are illus-
trated in Figure 3. Each pixel has an independent Gaussian distri-
bution, so the target image y is assumed to have the distribution

yi
j
 N i
j
(, ), i
j
(2)

where the distribution for each pixel value is Gaussian with a mean
of i
j
(, ) and a variance of i
j
.

2.1.1 The Function 
The model f is a function on a 2-dimensional plane which indi-
cates the density of flux at a given point on the plane. The general
shape of the function is a sharp peak at the center of the galaxy, ta-
pering off with distance. The disk tapers off exponentially with re-
spect to distance from the center of the galaxy, and the bulge tapers
off exponentially w.r.t. the cube root of the distance. The appendix
contains the details of the function and its motivations. Importantly,
the model is not smooth and has no derivatives at (0,0). There is
a single sharp spike at this location, which creates difficulties later
on when trying to deconvolve  and .

2.1.2 The Fixed Parameter(s) 
In the GM task, the relationship between the fixed parameter 
(the PSF) and the model  is one of convolution.
(,) =  (,)
(3)

Where  is an image with a single delta function, which indicates
no blurring; convolution with  results in a perfect replication of the
original image. The effect of convolution is illustrated in Figure 4.
Since  is an image of the PSF, convolving an image with a par-
ticular  is equivalent to blurring with a particular atmospheric con-
dition and/or mirror imperfection. Fortunately, convolution is a lin-
ear operation, since each pixel becomes a linear combination of all
other pixels. Hence, Equation 3 can be rewritten as

(,) =  (,) =
c

k=1
 k(k,)
(4)

Due to the physical interpretation of , all the pixels of the PSF
must be nonnegative. Also, conservation of energy requires that
the pixels sum to one.
2
As an approximation to the true noise distribution, which is Pois-
son.



42
Research Track Paper

-20
0
20
0
0.2
0.4
0.6
0.8
1




pixels
brightness
1-d Disk




-20
0
20
0
0.01
0.02
0.03
0.04
0.05
0.06
0.07




pixels
1-d PSF




-20
0
20
0
0.2
0.4
0.6
0.8
1




pixels
brightness
Disk * PSF




Figure 4: Example of effect of convolution with PSF. The far left figure is a one-dimensional brightness profile of a slice from a disk
galaxy image. The middle image is an example of a one-dimensional PSF, in this case a Gaussian. The far right plot is the convolution
of the disk profile by the PSF profile. Note that this operation results in a "blurring" of the original image.


2.1.3 The Noise Model 
Although  is the expected number of photons to arrive during
an exposure, the realized number will be a discrete counting pro-
cess. So the value will follow a Poisson distribution with a mean
and variance of (,). Because of this, error variance at a pixel
is proportional to the amount of signal at the pixel. This heterosce-
dasticity must be accounted for in the regression.
We consider the Poisson to be well approximated in this case
with a Gaussian distribution with a mean and variance of (,),
since the number of photons is usually greater than 30 in the more
influential central pixels.
The noise model can also be used to "mask" bad pixels in the
input image. If the galaxy of interest is close to another galaxy, or
artifacts are present in the image, then a mask is used to specify
which pixels to ignore. Bad pixels can be masked out entirely by
setting their  values to infinity.

2.2 Objective
The objective is to invert . Specifically, to take a given target
image y, PSF , and error model , and to find a parameter vector
   that, when fed to the generative model of Equation 1, pro-
duces an image ^y close to y. By `close' we mean to minimize the
distance between the two images. This distance function will be
denoted by 2.

2(y,^y,) =
N

i
(yi - ^yi)2
2i
(5)

This distance function is the least squares criterion with hetero-
scedastic noise. Assuming that the noise model  is correct, its
minimum will occur at the most likely fit.

3. NONPARAMETRIC FITTING
The algorithm must be able to quickly invert the galaxy image
model and to deconvolve images that have been blurred by a PSF.
The most successful algorithm type we have found has been a vari-
ant of the nearest neighbor algorithm. This approach creates a map-
ping from image space RN
×N
to parameter space  by remem-
bering and generalizing from many previous -to-RN
×N
mappings
(via prototypes).
We are thus using a nonparametric technique to perform a para-
metric regression. Two reasons primarily motivate this choice: 1)
the model is expensive to evaluate because the PSF convolution re-
quires O(N logN) operations each time a model image is generated.
Iterative techniques, e.g., Levenberg-Marquardt, need to evaluate
the model at every step, so search becomes costly, and 2) the num-
ber of local minima is large, so most descent-based methods are
inappropriate due to their vulnerability to local minima.

3.1 Brute Force Approach
For purposes of exposition, we will start with a naive, infea-
sible approach. The prototypes that will be used to map from
images to parameters are the members of the set of prototypes
X = {(xi,i,i)}pi
=1
, where xi = (i,i) and |X| is the number
of prototypes. We generate this set by sampling uniformly from 
and .
The regression task in this context is to find  by finding the
smallest distance between the target image and each of the proto-
types,

x =
argminx
X
2(x,y,)
(6)

where  is the parameter vector corresponding to the prototype
x. This is the core strategy of this regression algorithm. There
are, however, clear barriers to overcome. First, the dimensionality
of the prototype space is very high; one dimension per pixel for a
32×32 image gives 1024 dimensions. Comparing prototypes to in-
coming queries will thus be expensive. Second, the presence of the
uncontrollable fixed parameters  means that a large number of pro-
totypes will be required to adequately sample the parameter space



43
Research Track Paper

1
2
3
4




5
6
7
8


Figure 5: The first 8 eigengalaxies obtained from galaxies which have been convolved with a Gaussian PSF with 2-pixel standard
deviation.


×. However, nearest neighbor search can exploit three strate-
gies, which account for most of the speed gains made, 1) Principal
Components Analysis, 2) PSF-local Principal Component Analy-
sis, and 3) prototype decomposition.

4. FEATURE SPACE CREATION
One problem with working in image space RN
×N
is the com-
putational load of so many dimensions, i.e., one per pixel. With-
out noise, however, the model {,,} creates images that can at
most occupy a manifold whose dimension is equal to the number
of model parameters. Ideally, one should focus one's efforts in the
most relevant subspace and ignore the rest, especially since near-
est neighbor algorithms are sensitive to excessive dimensionality.
Principal Components Analysis (PCA) achieves this by determin-
ing the linear subspace in which the most variance resides.
Each prototype is a point in RN
×N
. To determine the best sub-
space of RN
×N
, we would like to know the shape of the subspace
that these prototypes occupy, which is the manifold {(,)| 
,  }. One measure of shape is the covariance between the
values of each dimension/pixel of the model manifold.

UUT =
Z


Z


[(, ) - µ] [(, ) - µ]T dd
(7)

where µ is the mean model image over all    and   . This
is the pixel covariance matrix, UUT , whose ij-th element is the co-
variance between pixel i and pixel j in the model space. Once the
pixel covariance is known, the first K eigenvectors of UUT form
an "optimal" subspace of RN
×N
. This subspace, out of all possible
linear K-dimensional subspaces of RN
×N
, explains the maximum
variance possible. These eigenvectors are the first K principal com-
ponents.
We must first estimate UUT . This can be done efficiently by
sampling the model manifold, i.e., by randomly choosing s and
s from the parameter space  × and generating images from
them using the model {,,}. These sample images are then
mean-normalized3, lined up as column vectors as the matrix U,
and multiplied to produce UUT .
In the PCA paradigm, the first K
N2 eigenvectors of UUT
form the basis for a new space, which we will denote . This basis
 is an N ×K orthonormal matrix. The span of the columns of 
will be referred to as an eigenspace and the individual columns as
eigenimages. See Figure 5 for eight sample eigengalaxies. Note
that T is a projection matrix such that ~y = T y. Vectors projected
into eigenspace will be denoted by · and are also vectors.

4.1 Projection into Feature Space
The entire nearest neighbor search should now take place within
the eigenspace . This requires projecting all of the prototype im-
ages and all target images into . Since the eigenvectors are or-
thogonal, projection into the eigenspace is straightforward:

~y = Ty
(8)

However, if the noise is heteroscedastic, the projection requires
more care. Different pixels/dimensions will be weighted differently
by the distance function 2, so distances between images will be-
have as if the image space has been warped. The stretching will be
axis-aligned in image space, because each pixel's noise is indepen-
dent of the others'.
If noise is heteroscedastic, the optimal projection is a weighted
linear regression. The diagonal matrix y is the covariance of y in
RN
×N
. The matrix y is just a reorganization of exactly the same
information contained in .

diag(y) =
-

(9)

3
The mean of all sample images is subtracted from each image, as
in Equation 7.



44
Research Track Paper

y
~
d


b

T





bulge x
x


R
NxN
PROTOTYPES




F
disk
y




Figure 6: Fitting image y. The empty circle is a disk component and the filled circle is a bulge component. The fitting is done in
feature space F. The intersection of the dashed line and the solid line in F is the best-fitting linear combination of the bulge and disk
to ~y. This process is repeated for multiple combinations of bulge and disk.


The projection of y into  is

~y = (T -1
y
)-1-1
y
Ty
(10)

and the resulting error covariance of ~y is

~y = (T-1
y
)-1
(11)

The matrix ~y is the covariance matrix of ~y, reflecting any uncer-
tainty in the eigenspace projection of y. In contrast to y, the co-
variance ~y usually has off-diagonal terms because the noise is not
axis-aligned with respect to the basis . Thus ~y will most likely
have correlated errors due to the projection.

4.2 Nearest Neighbor in Feature Space
Now we can attack the regression problem while inside the eigen-
space, where we enjoy a much reduced dimensionality. The al-
gorithm uses only the eigencoordinates of the prototypes, denoted
X. The algorithm becomes slightly more complicated since the 2
distance function must now account for any correlated errors in ~y
introduced by projection of y onto . The new algorithm:

~x =
argmin~x
X
( ~x - ~y)T -1
~y
( ~x - ~y)
(12)

where ~x and ~y are the eigencoordinates of x and y respectively. The
fitted parameter vector  is the  corresponding to ~x.


5. PSF-LOCAL FEATURES
Up to this point we have included all possible PSFs in our PCA.
The model manifold {(,) |   ,  } has relatively few di-
mensions,
4
but it is highly nonlinear with respect to . This means
that the number of eigenspace dimensions required to represent it
adequately will be larger. There are at least two approaches to this
problem: attempting to remove the effect of  and PSF-local PCA.
The most direct approach is to modify y to remove the effect
of the PSF . This can be accomplished via deconvolution. Un-
fortunately, deconvolution has difficulty with regions of the image
with sudden changes in intensity, which is the part of the image
with the most information relevent to our model. The central spike
(which is the galaxy center) is a discontinuity that is very difficult

4
We assume that the class of possible PSFs is constrained to lie in
some manifold with dimension much less than RN
×N
. E.g., images
of trees, human faces, white noise, etc. are not in .
for deconvolution to reconstruct. Also, deconvolution suffers from
instability in the presence of noise.
The next approach is PSF-local PCA. This maintains a differ-
ent  for every PSF. Each eigenspace is obtained by fixing  and
repeating the steps of PCA in Section 4. Each eigenspace is opti-
mal for its . The number of dimensions required is therefore quite
small, 20 dimensions captures over 99.999% of the variance.
It is feasible to reuse a  generated from a single PSF  be-
cause most PSFs in a given run of galaxy images are similar, and
because small differences between PSFs generally produce small
differences in resulting images.
The algorithm stores a relatively small number ns of PSF-specific
eigenspaces {(i,i)}ns
i=1
. The initial PSF population consists of a
few Gaussians of varying standard deviation, to which PSFs are
added during on-line operation. The decision to add a PSF to the
database is made, somewhat arbitrarily, when an incoming PSF dif-
fers by more than 0.02 in variance explained from its closest match
in the database. Variance explained here is 1-N
i
(i - i)2/i
2
i
.
Where  is a PSF from the existing database.


6. SPLITTING PROTOTYPES
The fact that the model is of the form (,) = ck k(k,)
can be used to good advantage; only prototypes for the compo-
nent k(k,) images need to be created. For example, in the GM
task the component functions are the disk, bulge, and background.
Instead of generating and storing large numbers of individual com-
binations of disks and bulges to form the set X, we can store three
much smaller sets of prototypes: a disk set Xd, a bulge set Xb, and
a sky set Xsky. Far fewer prototypes will be needed to represent the
same number of images. The size of the representable number of
prototypes is now |Xd|×|Xb|×|Xsky|, but only |Xd|+|Xb|+|Xsky|
images need be created.
The feature vectors of the prototypes are decomposable as well
because

(,) = T-
(,) =
c

k=1
T-
k(k,)
(13)


The same is true in the heteroscedastic case; since projection is still
achieved with a matrix operation. The matrix in question is the
product of the matrices which are multiplied by y in the right hand
side of Equation 10.
Nearest neighbor algorithms require some notion of distance,



45
Research Track Paper

Algorithm
Strategy
Speed

GIM2d
Simulated Annealing
~360 sec
Galfit
Levenberg-Marquadt
~30 sec
GMORPH
Instance-Based
~1 sec
1-d approaches (biased)
Descent
<1 sec


Table 1: Comparison of the different strategies and speeds of existing algorithms for the galaxy morphology task.


and distances are typically defined between two points. However,
since we are combining components of prototypes we must de-
fine a distance metric between a particular set of components {~x0,
~x1, ~x2,..., ~xc} and a target image ~y. In the GM task, this would
be finding the distance between a galaxy image and, for instance,
bulge #55 with disk #1244. The c components will define a (hy-
per)plane of possible images which consists of all non-negative lin-
ear combinations of the c components.
Given our definition of 2, the error-minimizing metric is the
distance to the nearest point on that plane. This distance 2 is cal-
culated via weighted linear regression:

Z
=
~x0 ~x1 ~x2 ... ~xc
(14)

 =
(ZT -1
~y
Z)-1-1
~y
ZT ~y
(15)

2
=
(ZT  - ~y)T -1
~y
(ZT  - ~y)
(16)

Importantly, this linear regression also determines the optimal lin-
ear combination of the particular components {~x0, ~x1, ~x2,..., ~xc}
used in Equation 14 for the particular target ~y. The optimal coeffi-
cients are the elements of the vector . Having thus determined c
of the parameters of the model via the relatively cheap operation of
a linear regression, the remaining dimension of the search space is
reduced by c. In the case of the GM problem, the three coefficients
of  are the total fluxes of disk, bulge, and background. Figure 6
illustrates the procedure for just a bulge and a disk component.
At this point, we in principle have only to calculate 2 for all
combinations of disks and bulges, and select the combination with
the smallest 2. Unfortunately, speed would then be unacceptably
compromised, so instead we search selectively.


7. NEAREST NEIGHBOR SEARCH
After the eigenspace has been selected and the target image has
been projected into the space, then the search for a nearest neighbor
begins. The search could be accomplished by an exhaustive search
of all bulge-disk combinations. However, we save time with the
following two-part search algorithm which has global and a local
search components:

1. Global: Random Pair Sampling starts by extensively ran-
domly sampling a large number of disk/bulge pairs from
~
Xd
and
~
Xb (the sky
~
Xsky is held fixed as a constant.) Each pair
is fit to y via weighted linear regression as in Equations 14-
16. We typically are able to sample 50,000 pairs, which is
an unusually dense covering of the parameter space for this
particular problem.

2. Local: Iterative search starts with the best candidate from
phase 1. The bulge-related parameters are held fixed while
the bulge component is then paired with all disk prototypes
from
~
Xd and a 2 is calculated for each combination. The
best combination becomes the new start point for another
`step'. Now the disk is fixed while
~
Xb is searched for a
better bulge. The process continues in this manner until no
improvement results. To evaluate each combination, 2 is
obtained by weighted linear regression as in Equation 16.
which also determines the optimal linear combination coef-
ficients, , of the prototypes for that particular target ~y.

The process is guaranteed to converge because the search space
is finite, and the sequence of pairs must always have a decreasing
2. Phase 2 is run on the top 10 or 20 candidates from phase 1.
We have found the local search as described to generally converge
to a better minimum than simple local (e.g., hillclimbing) search.
We conjecture that this is due to the large number of local minima
inherent in the problem.


8. RESULTS
Table 1 summarizes the strongest difference between this algo-
rithm and its predecessors, which is speed. Implemented in MAT-
LAB [4], GMORPH can analyze a 64×64 image in approximately
1 second. The nearest competitor can do the same image in about
30 seconds, but it is a descent method and vulnerable to local min-
ima. The times were obtained by generating random galaxy pa-
rameters from the range Fd  [0,1],Fb  [0,1],µx = 0,µy = 0,rd 
(0, 16], inc  [0, 85], d  [0, 180], re  (0, 16],   [0, 0.7], and
b  [0,180], and were used to generate 64×64 images of galax-
ies. The PSFs were Gaussian with a standard deviation of 2 pixels.
Figure 7 contains the results of a comparison between GMORPH
and the traditional and currently most-trusted measure of galaxy
shape: human classification. We tested the agreement between
GMORPH and an already-classified dataset with 300 galaxies. Each
image had been classified visually by a panel of four human experts
onto a scale which varies from 0 (all bulge) to 5 (all disk), with
6 being 'irregular'. The results show a clear correlation between
GMORPH and expert classification.
Figure 8 plots the agreement between GMORPH and GIM2d [9]
on the disk radius for low-noise, predominantly disk galaxy im-
ages from the Sloan Digital Sky Survey. Both algorithms were
run on 100 images, each with a unique PSF. The catalog of proto-
types used by GMORPH had |Xdisk| = 1000, |Xbulge| = 1000, and
|Xsky| = 1. The size of the images varied, but were approximately
50×50. The agreement between the two methods is apparent here,
however, in high-noise images the two methods produce different
results. Although we are still investigating the source of these oc-
casional discrepencies, there is preliminary evidence that these are
cases in which either the galaxy morphology diverges from the as-
sumed bulge/disk model, or noise is too severe to fit the data with
confidence.


9. CONCLUSIONS
We report on an ongoing investigation of a nonlinear regression
problem from astronomy: given a massive dataset of noisy, dis-
torted images of unknown galaxies, rapidly fit a nonlinear model
to each image in the dataset. A instance-based method for accom-
plishing this task has been described.



46
Research Track Paper

0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1




Galaxy Shape Class
Fitted
B/T
parameter




Figure 7: Comparison to human expert classification of 300
galaxies. The horizontal axis is the galaxy classification, which
varies from 0 (all bulge) to 5 (all disk), with 6 being 'irregu-
lar'. The vertical axis is the bulge-to-total flux ratio returned by
GMORPH. Each box indicates the 25th, 50th, and 75th quar-
tiles.




2
4
6
8
10
0
2
4
6
8
10
12
14




GIM2d Fitted Disk Radius
GMorph
Fitted
Disk
Radius




Figure 8: Noise and PSF effect on recovered disk radius er-
ror. The agreement between disk radius parameters fitted by
GIM2d and those fitted by GMORPH on images from the Sloan
Digital Sky Survey.
Instance-based methods allow for very fast identification of these
galaxies through sampling of the parameter space, the use of an
eigenspace, and through splitting the prototypes into components.
GMORPH can avoid the expense of calculating the PSF during the
search process, and can scan through the space of galaxy images
rapidly because it restricts search to the much smaller subspace de-
termined by PCA. We have measured the performance via simula-
tion and it should in principle allow for unprecedented analysis of
astronomical datasets of galaxy images.

10. REFERENCES
[1] N. Ball, M. Fukugita, O. Nakamura, S. Okamura,
J. Brinkmann, and R. J. Brunner. Galaxy Types in the Sloan
Digital Sky Survey Using Supervised Artificial Neural
Networks. Mon.Not.Roy.Astron.Soc., 348:1038, 2004.
[2] K. C. Freeman. On the Disks of Spiral and s0 Galaxies.
Astrophysical Journal, 160:811, 1970.
[3] E. Hubble. The realm of the nebulae. Yale University Press,
1936.
[4] Mathworks Inc. Matlab, version 6, release 13, 2003.
[5] S. Kirshner, I. Cadez, P. Smyth, and C. Kamath. Learning to
classify galaxy shapes using the EM algorithm. In Advances
in Neural Information Processing Systems, volume 15.
Morgan Kaufmann, 2002.
[6] J. Kormendy. Brightness distributions in compact and normal
galaxies. III - Decomposition of observed profiles into
spheroid and disk components. Astrophysical Journal,
217:406­419, 1977.
[7] C. Y. Peng, L. C. Ho, C. D. Impey, and H. Rix. Detailed
Structural Decomposition of Galaxy Images. Astronomical
Journal, 124:266­293, 2002.
[8] K. Ratnatunga, R. Griffiths, and E. Ostrander. Disk And
Bulge Morphology Of Wfpc2 Galaxies: The Hst Medium
Deep Survey Database. accepted to Astronomical Journal,
1999.
[9] Luc Simard, Christopher N. A. Willmer, Nicole P. Vogt,
Vicki L. Sarajedini, Andrew C. Phillips, Benjamin J. Weiner,
David C. Koo, Myungshin Im, Garth D. Illingworth, and
S. M. Faber. The Deep Groth Strip Survey II. Hubble Space
Telescope Structural Parameters of Galaxies in the Groth
Strip. Astrophysical Journal Supplements, 142(1), 2002.
[10] N. Slonim, R. Somerville, N. Tishby, and O. Lahav.
Objective Classification of Galaxy Spectra using the
Information Bottleneck Method. Monthly Notices to the
Royal Astronomical Society, 323, 2001.
[11] D. G. York, J. Adelman, J.E. Anderson, and et al. The Sloan
Digital Sky Survey: Technical Summary. Astronomical
Journal, 120:1579­1587, 2000.

APPENDIX

A. SURFACE BRIGHTNESS FUNCTION
Before being blurred by the PSF, the galaxy is created by the
surface brightness function, , which takes as an argument a vector
from . Here are the 12 model parameters of , a brief description,
and their units:

Fb, Fd total integrated flux of bulge and disk components (erg ·
cm2/sec)
µx, µy the x and y offset of the galactic center from the center of
the image (pixels)
re, rd bulge and disk scale lengths (pixels)



47
Research Track Paper

b apparent bulge ellipticity (unitless)
inc disk inclination (degrees). Rotation toward viewer
b d bulge and disk angle of rotation (degrees). Clockwise rota-
tion relative to viewer
sky sky background offset (flux/cm2)

Sersic a bulge shape parameter that is fixed to the value 4 for all
experiments

The classic model of galaxies has been additive: a linear combina-
tion of a bulge image, a disk image, and a sky (background) image
[9, 7, 8]. The sky image is a constant, and will omitted from the
formulae for clarity.
Before discretization into pixels, g is a continuous brightness
function defined over the 2-dimensional image plane uv.5 The ex-
pected number of photons to hit a pixel/detector is found by inte-
grating g over the uv area of the pixel on the plane.
The function g is the sum of c component functions:

g(u,v,,) =
c

k=1
gk(u,v,k,)
(17)


In the galactic morphology task, g has three components: a disk,
a bulge, and constant background. We will assume henceforth that
the PSF is a delta function, so we omit  from the discussion. We
refer to the entire unblurred disk function as gdisk(), and the un-
blurred bulge image as gbulge().
The surface brightness, gdisk, of a pure disk galaxy w.r.t. radius
has been found to have an exponential form [2, 6]. A commonly
used model consists of an infinitely thin disk with brightness in the
plane of the disk tapering off exponentially away from the center.
When projected onto the image plane, the brightness gdisk has the
form

gdisk(u,v)  Fdexp -
x2 +y2 cos-2 inc
rd
(18)

where Fd is the integrated brightness of the disk, inc is the degree
of inclination of the disk towards the viewer, and rd is the disk
"radius", or scale parameter. Both Equation 18 and Equation 19
are simplified for presentation in that they omit clockwise rotation
and fix the center of the galaxy at (0,0).
The bulge is modeled with a classical de Vaucouleurs profile.
Also known as the r1
/4
law, de Vaucouleurs' law is perhaps the
most widely used empirical law to describe the surface brightness
profile of a pure bulge galaxy. The bulge brightness is


gbulge(u,v)  Fbexp


-b
x2 +y2(1-b)-2
rb
1
4



(19)


where Fd is the integrated brightness of the bulge, b describes the
ellipticity of the bulge, and rb is the bulge "radius".
The actual image recorded by the telescope is digitized into pix-
els. Pixels are elements of the matrix .

i
j
(, ) =
Z
i+1

i
Z
j+1

j
g(u,v,,)dudv
(20)




5
The variables u and v are used only because x and y appear else-
where in this paper.



48
Research Track Paper

