Mining Traffic Data from Probe-Car System
for Travel Time Prediction
Takayuki Nakata
Jun-ichi Takeuchi

Internet Systems Research Laboratories, NEC Corporation
1753 Shimonumabe, Nakahara-Ku, Kawasaki, Kanagawa 211-8666, Japan

{t-nakata@bk,tak@ap}.nec.com

ABSTRACT
We are developing a technique to predict travel time of a vehicle
for an objective road section, based on real time traffic data
collected through a probe-car system. In the area of Intelligent
Transport System (ITS), travel time prediction is an important
subject. Probe-car system is an upcoming data collection method,
in which a number of vehicles are used as moving sensors to
detect actual traffic situation. It can collect data concerning much
larger area, compared with traditional fixed detectors. Our
prediction technique is based on statistical analysis using AR
model with seasonal adjustment and MDL (Minimum Description
Length) criterion. Seasonal adjustment is used to handle
periodicities of 24 hours in traffic data. Alternatively, we employ
state space model, which can handle time series with periodicities.
It is important to select really effective data for prediction, among
the data from widespread area, which are collected via probe-car
system. We do this using MDL criterion. That is, we find the
explanatory variables that really have influence on the future
travel time. In this paper, we experimentally show effectiveness
of our method using probe-car data collected in Nagoya
Metropolitan Area in 2002.

Categories and Subject Descriptors
I.2.6 [Artificial Intelligence]: Learning

General Terms
Algorithms, Experimentation

Keywords
ITS, travel time, probe-car, time series, information criterion

1. INTRODUCTION
We are developing a technique of travel time prediction using real
time traffic data such as probe-car data. Our goal is to establish a
method to predict travel time of a vehicle for an objective road
section (referred to as `link'), reflecting real time traffic conditions.
Travel time prediction is an important subject in the area of
Intelligent Transport System (ITS), e.g. for the purpose of
dynamic route guidance In usual route guidance system as of car
navigation, the objective function in route search is the route
length from an origin to the destination or the total travel time
which is obtained based on predefined travel time of each link.
Accuracy of the estimate of the total travel time will be improved
if we employ the total travel time based on predicted travel time
of each link at the time when the car will drive there. For this
purpose, precise prediction of travel time reflecting real time
traffic condition is important. Recently in particular, methods
using probe-car system are intensively studied. Probe-car system
is a data collection method using individual vehicles as moving
sensors. Through this system, it is possible to collect various
traffic data which concern much larger area than by traditional
fixed sensors method. In this paper, we study methods to predict
mean travel time of links based on the data collected by the
probe-car system.

We treated the data of travel time as time series, which we created
from each trip data of probe-cars. For time series modeling, we
employ AR model (Auto Regression model) and state space
model [5]. These models have the parameters to be tuned, by
which varieties of prediction functions are realized. In mining
(learning) process, we tune such parameters based on the past
traffic data in order to obtain precise prediction function.

As for the AR model, the objective time series should be
stationary. If not, we can not expect accurate prediction, but
actual traffic phenomena have periodic pattern of one day (or one
week), and are usually nonstationary. Hence, straight forward
application of AR model is not appropriate. We should remove
such periodic patterns from the original time series. We do this by
the technique of seasonal adjustment, i.e. we prepare a model of
the periodic pattern based on past statistics of travel time and
subtract the values given by the model from the original time
series. To represent periodic patterns, we could employ various
kinds of statistical models. We employ a table of travel times,
which lists travel times for a specific link and specific time, etc.
The table is usually made based on past statistics of travel times.
This table represents the periodic patterns contained in the series
of travel time and can be used as prediction method. This kind of
prediction method, which is based on the past statistics, is widely
employed, e.g. for forecasting the occurrences of traffic jams in
holiday seasons. In this paper, we call such methods as `static
method'. The proposed method treats the deviation of real time
travel time information from those given by the static method by
using the AR model. By this way, we can predict the travel time
reflecting real time traffic conditions. The state space model,
which is an alternative way to treat periodic nature in the time
series of travel time, is fairly general representation of time series
model. It includes AR model and MA (moving average) model as
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that
copies bear this notice and the full citation on the first page. To copy
otherwise, or republish, to post on servers or to redistribute to lists,
requires prior specific permission and/or a fee.
KDD'04, August 22­25, 2004, Seattle, Washington, USA.
Copyright 2004 ACM 1-58113-888-1/04/0008...$5.00.




817
Industry/Government Track Poster

special cases, and in particular, can treat nonstationary nature of
time series such as periodicity.

One of purposes of our study is to utilize the information about
not only the objective link but wide spread links which is
available via probe-car system. To do this, we employ the multi-
dimensional statistical models. We refer to the variables
corresponding to the added links as explanatory variables. In this
task, it is important to select really effective explanatory variables,
since using ineffective variables affects prediction accuracy in
general. We solve this problem in the context of model selection
in statistics and learning theory. In fact we employ information
criterion MDL (Minimum Description Length) [6]. It is known
that learning based on this criterion can improve accuracy of
prediction. We will show by cross validation using probe-car data
that prediction accuracy is improved by adding exploratory
variables. Selection of exploratory variables can be thought of as
knowledge acquisition. For example, if the section in front of the
objective link is not selected, but that after the objective section is,
then we learn that the latter has relation to the travel time. This is
very simple case, but we might discover the relation which we
cannot aware by usual observation.

In this paper, we report certain experiments using probe-car data
collected in Nagoya Metropolitan Area in 2002. There,
approximately 1,500 probe-taxis were operated [4]. We evaluated
accuracy of our methods by cross validation. In particular, we
showed that employing the AR mode improved accuracy
compared to prediction by the travel time table even in the case
without explanatory variables and that selecting explanatory
variables by MDL was effective. The data from the probe-car
system contains rather many outliers, since the individual probe-
cars drive at the driver's pleasure. Hence, we cleaned up the probe
data before creating the time series of averaged travel time from
the probe data. For this procedure, we employed an outlier
detection engine SmartSifter.[10]

We briefly review the related researches. Concerning the static
methods, Kumagai et al. [5] and Chung [3] studied. In the former,
they make clusters of daily patterns by principal component
analysis and create a function which maps each day to a cluster by
quantification theory III. This is smarter than the way of simple
travel time table. In the latter, he employed clustering technique
from data mining field. It is possible to employ these techniques
in our work instead of simple travel time table. As a method by
time series analysis, [7] is known. They employ artificial neural
network as a prediction function.

The rest of this paper is organized as follows: Section 2 describes
the probe-car data we use. Section 3 illustrates statistical model
we employ in this work. We review AR model and theory of
information criterion. In Section 4, we state our experimental
result. Section 5 contains our concluding remarks.

2. PROBE-CAR DATA
We use the data collected in probe-car experiment which has been
conducted in Nagoya Metropolitan Area by ``Internet ITS Project
(Main body: Ministry of Economy, Trade and Industry since
2002). There, approximately 1,500 probe-taxis have been
operated [4] shows the objective links in this paper. The reason
why we selected these links is that many probe data are available
for them. In other related works, the objective links are usually
high ways, where it is easier to predict travel time than for city
roads since influence of signal and cross section does not exist.




l01
l02
l03
l04
l05
l06
l07
l08
l09
l10




Shirakawa
Park
Sakae

Hirokoji
Street
Fushimi




Figure 1: Map of the target area
The probe-car data (probe data for short) are collected from each
probe-car at the defined time intervals and moment of the defined
operations. Each record consists of time, car location, state of the
car's devices such as wiper and brake. After some correction on
location and some manipulation, we obtain a set of trip data for
each link, which consists of, car ID, time when the car entered the
link, time when the car exited from the link, difference of them
(travel time). We simplify the original format to the form

(start time of the trip, travel time).

Taking statistics of such trip data, we made time series of mean
travel time in 15 minutes for each link. The resultant format of a
record is

(s,i,T,W,N)

=(day of a week, time index, mean travel time, variance, #trips).

Here, time index is an integer from 0 to 95, with 0 corresponding
to the interval 0:00-0:15. The last field is the number of observed
probe data in the time interval. We refer to the time series defined
here as probe time series.

By close observation of each trip data, we see that there exist
obvious outliers. For example, the trip data, whose travel time is
over 10 times longer than averaged values are seen. We can
imagine a reason: the probe taxi stopped at some shop to wait the
passenger's return from shopping. Such probe data have bad
influence on our task. Hence, we clean up them by outlier
detection technique, employing SmartSifter [10]. It is an outlier
detection engine of statistical method. We removed the data
corresponding 2-sigma outliers. (Actually they were not 2-sigma
outliers, since SmartSifter employed Gaussian mixture model.)

We prepared probe time series for 10 links in Nagoya (Figure 1)
from January 12th to March 31st, omitting the data for Saturdays
and Sundays. Hence we have approximately 5,000 records of
probe time series for each link. Let S be the set of all links. Let w
be a vector of which components are T and N for elements of S.
Note that w is a 20-dimensional vector. We refer to w as traffic
information vector in this paper. Using index t, we let wt denote a
traffic information vector which consists of tth records of each
probe time series. We let wm
n
denote a series wmwm+1...wn and wn
w1
n
. Also, we let wt:a denote the ath component of wt
.




818
Industry/Government Track Poster

3. STATISTICAL MODEL AND
LEARNING STRATEGY
3.1. TRAVEL TIME TABLE
Basically, we use AR model for time series modeling. It assumes
that the data sequence is stationary, but this assumption is not
valid for traffic information, which has periodic patterns with 24
hours and 7 days. Hence, we need to apply seasonal adjustment.
In this paper, we do it for 24hours periodicity, using travel time
table, which is basically in the similar format data as the probe
time series but made ignoring the information of date. For each
link, we can obtain the records

(T(i),W(i),,N(i))=(mean travel time, variance, #trips),

where i is the time index. Note that the travel time table itself can
be used for prediction. In Subsection 4.1, we examine accuracy of
this prediction method.

Removing the values in the travel time table from each term in the
probe time series, we have new time series. Now let t be a vector
of which components are T(i) and N(i) of all elements of S, where
t = i (mod 96). In other word, t is a term from periodic pattern,
contained in wt. We define a new time series as xt = wt - t. The
averages of T, W, and N through xn are 0. Also, it is expected to be
stationary, approximately. The above travel time table can be
modified as changing the time interval where mean is taken. For
example, it can be 1 hour instead of 15 minutes. Then, we have a
smoother cyclic pattern. Also, it is possible to replace each value
with the average of the neighbor's value. Figure 2 shows graphs
of travel time tables which we made from our probe time series.
They are average for weekdays.




0
10
20
30
40
50
60




1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
hour
second




l03
l04
l05
l06




Figure 2 : Travel Time Tables for Some Links

3.2. AR MODEL
The AR model is defined as follows:

,))((
1
11
t
k


j
jtt
xjAx
µµ
++-=

=
-++


where t is a noise term and we assume that this is drawn from
Gaussian distributions with covariance V and mean 0. Here, A(j)
is dth order square matrix and referred to as AR coefficient. We
assume that expectation of xt is µ (usually µ = 0 is assumed). A
parameter k is referred to as order of the AR model. An AR model
specifies the probability distribution of the data sequence
L
321
xxx
. Here, A(j), V, and µ are the parameters to be estimated
from observed samples. Let p(xt+1|xt-k+1
t
,) denote the conditional
probability density function for xt+1 given xt-k+1
t
defined by (1),
where we let =(A, µ,V). This is the Gaussian distribution with
mean
µµ +-

=
-+
k

j
jt
xjA
1
1
))((
and variance V. Also, we let

,),|(),|(
1
111

-

=
+-++
=
n

kt
t
ktt
kn
k
xxpxxp

which is a joint probability
density function. For estimation of , we employ maximum
likelihood method, in which we define the estimate of  by
.
),|(maxarg
^
1


kn
k
xxp
+
=
Once we estimate these parameters,

we can predict a future value of x given xt+1-k
t
by

.
^
)
^
)((
^
^
1
11
µµ +-=

=
-++
k


j
jtt
xjAx



3.3. STATE SPACE MODEL
In this section we briefly review the theory of state space model
[2][5]. This model can represent a great variety of time series
models and handle nonstationary time series composed of AR
model, seasonal component, and trend component.

We denote observable time series data by wt with time index t.
State space model can be described by the following two
equations:

ttt
GvFyy
+=
-1



ttt
Hyw

+=
,

where yt denotes the inner state of assumed system at time t,
which is not observable. The system noise t and the observation
noise t are assumed to be i.i.d. (independently identically
distributed) random variables with zero mean and covariance
matrix Q and R, respectively. We can interpret that the equation
(2) describes the evolution of the state yt and the equation (3)
describes the observation process. Although we cannot directly
observe the state yt, we can estimate it via observation wt using
Kalman filter [2].

Here, we consider a complex nonstationary time series, which is
seen in traffic time series data. In general, time series data can be
decomposed into a trend component rt, a stationary component xt,
seasonal component t, and observation noise component t as wt
= rt + xt + t + t (a special case of equation (3)). We assume that
component xt can be described by an AR model of order p. The
seasonal component with period L is a sequence t with the
properties t = t-L + t. It can be generated by the recursions t = -
t-1 - t-2 - ... - t-L+1 + t, where t is an i.i.d. sequence with
variance t. Here, we omit the trend component assuming that it is
ignorable for our traffic information. We can express these
components xt and t in state-space form introducing a new state
vector yt = [ xt xt-1 xt-2 ... xt-p+1 | t t-1 t-2 ... t-L+1].

The parameters to be estimated are AR coefficients and
covariance matrices of system noise and observation noise. For
fixed parameters and given data sequence, we can calculate the
likelihood of the model using Kalman filter. Then, we can
estimate the parameters maximizing the likelihood by numerical
optimization method.

Once we estimate the parameter, we can predict the value of wt
using Kalman filter.
(1)
(2)

(3)




819
Industry/Government Track Poster

3.4. MODEL SELECTION
Suppose that the objective mean travel time for prediction is wt
:1
the first component of vector w. This is referred to as an objective
variable. Here, the remaining component wt:2,...,wt:20 are
explanatory variables, if we employ the AR model (1) as it is.
However, this is wasteful. We should select the explanatory
variables which are truly effective for prediction. Let M be a
symbol to represent a way of such selection and G a set consisting
of all M. Let z be a vector consisting of the objective variable and
the explanatory variables specified by M with zt:1 = xt:1. We let d'
denote the dimension of z. When we specify M and the order k of
AR model, an AR model with parameters is specified. We let
M,k be a parameter's range associated with the AR model
specified by M and k. Let
),,,|(
1
kMzzp
kn
k

+
be the joint
probability density function specified by M, k, and
kM ,


.
Here, our task is to select appropriate M and k, given the data xn.
We do this using MDL (Minimum Description Length) [7][1],
which is defined as




,)log(
2
'dim
^
log
2
)log(
2
'dim
),|(
1
logmin),,(MDL


2
1


Ckn
kn
kn
zzp
kMz
kn
k
n




+-+
-
=
-+=
+









where we let
2
^
 denote the (1,1)-component of V^ and '
parameters needed to specify the conditional probability
distribution of zt+1:1 given zt. Here, ' consists of µ, the first lines
of A (j) (j=1,...,k), and the (1,1) component of V. Hence, we have
dim 'd = d''+kd'+1. The first term is referred to as data
description length and the second term as parameter description
length. The former is measure for the model's fitting to the data,
while the latter is measure for complexity of the model. The data
description length equals minus likelihood, which is what is
maximized for maximum likelihood estimation. In general, the
more complex the model comes, the shorter the data description
length comes. Hence, it is no good to use likelihood as index for
comparing models, whose complexity are different from each
other. However, we can regularize the index by adding parameter
description length as penalty for complex model. In fact,
according to the MDL principle, we should select M and k which
minimize MDL(zn,M,k). We refer to them as MDL estimate. It is
known that the accuracy of prediction is optimized in terms of
Hellinger distance, when we employ the MDL estimate under a
certain regularization condition [1][9].

3.5. PROPOSED METHOD

Here, we summarize our methods by the charts illustrated in
Figure 3 (learning phase) and Figure 4 (prediction phase). These
charts are for the method of AR model with travel time table. As
for the state space model, the flow charts becomes much more
simpler, we have only to replace the block indicated by broken
line by the state space model.
Figure 3: Proposed Method (learning phase)




Figure 4: Proposed Method (prediction phaes)

4. EXPERIMENT
To examine our technique, we conducted 10-cross validation
using the probe time series we prepared. Let D denote the whole
data (from Jan. 12th to March 31st). We separate it to ten subsets
DT1, DT2,...,DT10 with each being the time series of identical
size. We let Di denote D-DTi (i=1,...,10). We refer to Di and DTi
as learning data and test data, respectively. In 10-cross validation,
at ith stage, we learn the prediction function using Di and measure
the prediction error of the obtained function for the test data DTi.
We perform this stage for i=1 to 10 and average these 10 errors.




820
Industry/Government Track Poster

By this procedure, we can guess accuracy of our technique for
newly observed data. We employ the mean squared error (MSE
for short). Assume that we have xn as the test data. For them, we
calculate the error as
(
)
)/(
^
1
2
knxx
n

kt
tt
--

+=
, where
t
x^ is the
predicted value for xt based on xt-k-1
t-1
. We let Error(i) denote the
mean squared error obtained in the ith stage. The final averaged
error is
)(Error)10/1(
10

1i
i

=
. We also use square root of MSE

(RMSE for short).
4.1. TRAVEL
TIME
TABLE
AND
1-
DIMENSIONAL AR MODEL
We evaluated MSE and RMSE of the prediction made by the
travel time table method and the combination method of travel
time table and AR model. In this case we didn't add any links as
explanatory variables. The following tables show the result of all
links. We can see from these tables that accuracy was improved
for all links using the AR method.

Table 1: mean squared error of table method and one-dimensional AR model

link
l01
l02
l03
l04
l05
l06
l07
l08
l09
l10
table
258.
251.
45.9
84.8
171.
245.
235.
172.
240.
205.
AR (k=4)
237.
244.
41.3
74.3
148.
217.
209.
159.
228.
199.


Table 2: root mean squared error of table method and one-dimensional AR model

link
l01
l02
l03
l04
l05
l06
l07
l08
l09
l10
table
16.1
15.8
6.8
9.2
13.1
15.7
15.3
13.1
15.5
14.3
AR (k=4)
15.4
15.6
6.4
8.6
12.2
14.7
14.5
12.6
15.1
14.1


4.2. MODEL SELECTION
First, we examine the case where we use only one link for an
explanatory variable. Table 3 shows the results for objective links
l03, l04, l05, and l06. The second column indicates the
explanatory variable we used. In this column, `-1' (`+1') means
that the travel time of downstream (upstream) link of the objective
link was added as a explanatory variable and `-2' (`+2') means its
downstream (upstream) link's travel time was added. Note that the
values of MDL listed here were obtained with the whole data set
D, while MSE and RMSE were obtained with the subset Di
corresponding to each objective link. We indicate the minimum
values of MDL and MSE of each link by gray cells.

From these results, we can see that accuracy was improved
compared to the case without an explanatory variable when we
selected the model which minimizes MDL.

Next, we examine the case where we use multiple links for
explanatory variables. We evaluated the MDL of all combinations
of neighbor link's travel time as exploratory variables. We list the
combination which minimized MDL for objective links l03, l04,
l05, and l06 in table 5 with MSE. Here, `y' means that we used the
link as an explanatory variable. Also, we list the combination
which minimized MSE for the same objective links in

Table 5.

From these results, we conclude that model selection by MDL can
choose the nearly best combination of the neighbor links to predict
travel time except for the objective link l06. As for l06, we could
not observe significant correlation between MDL and MSE. We
think that this is because l06 link is close to a large crossing and
the influence of the signal on the crossing was large.

Besides RMSE, we examine accuracy of our method by relative
error too, which we defined by absolute prediction error divided
by observed mean travel time. Concerning the listed combination
of explanatory variables, the averaged relative errors were 27.7%,
28.7%, 36.5%, and 38.3%, respectively for l03, l04, l05, and l06.
Table 3: 10-cross validation with one explanatory variable

objective
explanatory
MDL
MSE
RMSE
+2
16368
48.0
6.93
+1
16375
42.6
6.53
16357
41.3
6.43
-1
16340
40.9
6.40
l03


-2
16368
41.2
6.42
+2
17826
79.4
8.91
+1
17815
75.0
8.66
17810
74.3
8.62
-1
17815
74.0
8.60
l04


-2
17787
73.2
8.56
+2
19561
150.8
12.28
+1
19543
147.9
12.16
19553
148.5
12.18
-1
19537
146.3
12.10
l05


-2
19546
146.9
12.12
+2
20470
219.8
14.82
+1
20478
219.0
14.80
20488
217.0
14.73
-1
20452
212.3
14.57
l06


-2
20482
215.2
14.67


Table 4: Combination of explanatory vars. minimizing MDL

objective
explanatory
MDL
MSE RMS
+2
+1
-1
-2
l03
n
n
y
n
16340
40.9
6.40
l04
n
n
n
y
17787
73.2
8.56
l05
n
n
y
n
19537
146.
12.10
l06
y
n
y
n
20442
217.
14.76




821
Industry/Government Track Poster

Table 5: Combination of explanatory vars. minimizing MSE

objective
explanatory
MDL
MSE RMS
+2
+1
-1
-2
l03
n
n
y
n
16340
40.9
6.40
l04
n
n
y
y
17800
73.1
8.55
l05
n
n
y
y
19543
145.
12.07
l06
n
n
y
y
20463
212.
14.56


4.3. STATE SPACE MODEL
We compared the method of AR model with time table to that of
state space model. For this evaluation, we prepared the probe time
series where one record is the value for 60 minutes. This is
because the computational cost of the Kalman filter is of order O
(L3), where L is the assumed period length. For probe time series
in our experiment, the proper value of L is 24 when one record is
for 60 minutes, while it is 96 when one record is for 15 minutes (4
records per hour and 96 records per day). In the latter case,
computational cost is too high to conduct the experiment.
Similarly, owing to time restriction, we did not employ any
additional explanatory variables.

Table 6 shows the results by these two methods. We can see that
MSE for AR model with time table is much better and almost as
half as that for state space model. This is because the periodic
pattern in traffic time series is not necessarily stable and randomly
changes. State space model estimates periodic pattern under the
influence of the pattern right before. Hence, the periodic
component in state space model is too sensitive to such random
changes, while the periodic pattern by the travel time table is
robust to them. Although time table's robustness might be
appropriate for this data, further investigation should be necessary
for a variety of data.


Table 6: mean squared error of table method and ssm (state space model)

link
l01
l02
l03
l04
l05
l06
l07
l08
l09
l10
table
75.4
55.4
12.0
23.2
47.4
76.6
77.0
51.4
66.7
47.6
ssm
154.
105.
25.9
49.2
92.2
141.
148.
104.
138.
88.6


5. CONCLUSIONS
Concerning the prediction of future travel time using real time
traffic data from probe-car system, we have examined accuracy of
the two methods: AR model with travel time table and state space
model. As for the latter method, it was significantly inferior to the
former method in our experiment. It is probably because of
instablity of the data from probe-car system. We think that further
investigation will be instructive. As for the former method, we
have shown that our method is more effective than the time table
method alone and that the prediction accuracy is improved by
using explanatory variables selected by MDL principle.

ACKNOWLEDGMENT
This work was supported by Ministry of Public Management,
Home Affairs, Posts and Telecommunications, Japan.

REFERENCES
[1] A. Barron. & T. Cover, ``Minimum complexity density
estimation'', IEEE trans. on IT, Vol. 37, No. 4, July 1991.

[2] P. J. Brockwell & R. A. Davis, Time Series: Theory and
Methods (Second Edition), Springer-Veralag New York,
1990.

[3] E. Chung, ``Classification of Traffic Pattern'', Proc. of the
11th World Congress on ITS, 2003.
[4] T. Miwa and T. Morikawa, ``Analysis on Route Choice
Behavior Based on Probe-Car Data'', Proc. of the 11th World
Congress on ITS, 2003.

[5] G. Kitagawa and W. Gersch, Smoothness Priors Analysis of
Time Series, Lecture Notes in Statistics, Springer-Verlag,
1996.

[6] M. Kumagai et al., ``Traffic Information Prediction Method
Based on Feature Space Projection'', ISPJ SIG Technical
Report, 2003-ITS-14, 2003.

[7] J. Rissanen, ``Modeling by shortest data description,''
Automatica, vol. 14, pp. 465-471, 1978.

[8] C.-H. Wei and Y. Lee, ``Development of Freeway Travel
Time Forecasting Models Using Artificial Neural Networks'',
Proc. of the 11th World Congress on ITS, 2003.

[9] K. Yamanishi, ``A learning criterion for stochastic rules'',
Machine Learning, a special issue for COLT '90, 9(2/3),
1992.

[10] K.Yamanishi, J.Takeuchi, G.Williams, and P.Milne: ``On-
line Unsupervised Oultlier Detection Using Finite Mixtures
with Discounting Learning Algorithms'', Data Mining and
Knowleged Discovery Journal, 8 (3): 275-300, May 2004.




822
Industry/Government Track Poster

